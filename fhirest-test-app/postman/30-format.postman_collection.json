{
	"info": {
		"_postman_id": "4bfe5b8d-204a-4982-b73e-bbbdaad0e350",
		"name": "30-format",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2623563"
	},
	"item": [
		{
			"name": "json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"active\": true,\n    \"resourceType\": \"Patient\"\n}"
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "application/fhir+json;charset=UTF-8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/fhir+json;charset=UTF-8"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"active\": true,\n    \"resourceType\": \"Patient\"\n}"
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "application/xml",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is xml\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/xml\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('<')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "application/json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is json\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('{')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "xml",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Patient xmlns=\"http://hl7.org/fhir\">\n<active value=\"true\"></active>\n</Patient>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "application/xml",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is xml\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/xml\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('<')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Accept",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "application/json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is xml\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('{')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "application/json;q",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is xml\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('{')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Accept",
						"value": "application/json;q=0.2"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "application/fhir+xml",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is xml\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/fhir+xml\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('<')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Accept",
						"value": "application/fhir+xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "application/fhir+json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is xml\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/fhir+json\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('{')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Accept",
						"value": "application/fhir+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "?_format=xml",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is xml\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/fhir+xml\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('<')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1?_format=xml",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					],
					"query": [
						{
							"key": "_format",
							"value": "xml"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "?_format=json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is xml\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/fhir+json\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('{')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1?_format=json",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					],
					"query": [
						{
							"key": "_format",
							"value": "json"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "as browser gives",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is html\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"text/html\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('<')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Accept",
						"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "unsupported format",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([406]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Accept",
						"value": "application/somethingelse"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "empty Accept",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is json\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('{')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		},
		{
			"name": "* Accept",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"body is json\", function () {",
							"    pm.expect(postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\")).to.eq(true);",
							"  pm.expect(pm.response.text().startsWith('{')).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{fhirest}}/Patient/formattest1",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Patient",
						"formattest1"
					]
				}
			},
			"response": []
		}
	]
}