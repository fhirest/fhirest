{
	"info": {
		"_postman_id": "ed5a56e5-daf3-448f-916c-42c9e9f4852c",
		"name": "42-search-reference-different-types",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5159090"
	},
	"item": [
		{
			"name": "test data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"resourceType\": \"Bundle\",\n    \"type\": \"transaction\",\n    \"entry\": [\n        {\n            \"request\": {\n                \"url\": \"Patient/ps100\",\n                \"method\": \"PUT\"\n            },\n            \"resource\": {\n                \"identifier\": [\n                    {\n                        \"system\": \"urn:fhirest-search-tests\",\n                        \"value\": \"TESTPATIENT-100\"\n                    }\n                ],\n                \"name\": [\n                    {\n                        \"family\": \"Margherita\"\n                    }\n                ],\n                \"active\": true,\n                \"gender\": \"female\",\n                \"birthDate\": \"2000-02-02\",\n                \"resourceType\": \"Patient\"\n            }\n        },\n        {\n            \"request\": {\n                \"url\": \"Group/ps100\",\n                \"method\": \"PUT\"\n            },\n            \"resource\": {\n                \"resourceType\": \"Group\",\n                \"membership\" : \"enumerated\",\n                \"identifier\": [\n                    {\n                        \"system\": \"urn:fhirest-search-tests\",\n                        \"value\": \"TESTGROUP-100\"\n                    }\n                ],\n                \"type\": \"animal\",\n                \"actual\": true,\n                \"code\": {\n                    \"text\": \"Developers\"\n                },\n                \"name\": \"the Herd\",\n                \"quantity\": 25\n            }\n        },\n        {\n            \"request\": {\n                \"url\": \"Encounter/enc100\",\n                \"method\": \"PUT\"\n            },\n            \"resource\": {\n                \"resourceType\": \"Encounter\",\n                \"status\": \"in-progress\",\n                \"class\": [\n                    {\n                        \"code\": \"IMP\"\n                    }\n                ],\n                \"subject\": {\n                    \"reference\": \"Patient/ps100\"\n                }\n            }\n        },\n        {\n            \"request\": {\n                \"url\": \"Encounter/enc101\",\n                \"method\": \"PUT\"\n            },\n            \"resource\": {\n                \"resourceType\": \"Encounter\",\n                \"status\": \"in-progress\",\n                \"class\": [\n                    {\n                        \"code\": \"IMP\"\n                    }\n                ],\n                \"subject\": {\n                    \"reference\": \"Group/ps100\"\n                }\n            }\n        }\n    ]\n}"
				},
				"url": {
					"raw": "{{fhirest}}",
					"host": [
						"{{fhirest}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "both",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(2);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{fhirest}}/Encounter?subject=ps100&_id=enc100,enc101",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Encounter"
					],
					"query": [
						{
							"key": "subject",
							"value": "ps100"
						},
						{
							"key": "_id",
							"value": "enc100,enc101"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "patient",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(1);",
							"    pm.expect(pm.response.json().entry[0].resource.id).to.eql(\"enc100\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{fhirest}}/Encounter?subject:Patient=ps100&_id=enc100,enc101",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Encounter"
					],
					"query": [
						{
							"key": "subject:Patient",
							"value": "ps100"
						},
						{
							"key": "_id",
							"value": "enc100,enc101"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(1);",
							"    pm.expect(pm.response.json().entry[0].resource.id).to.eql(\"enc101\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{fhirest}}/Encounter?subject:Group=ps100&_id=enc100,enc101",
					"host": [
						"{{fhirest}}"
					],
					"path": [
						"Encounter"
					],
					"query": [
						{
							"key": "subject:Group",
							"value": "ps100"
						},
						{
							"key": "_id",
							"value": "enc100,enc101"
						}
					]
				}
			},
			"response": []
		}
	]
}
