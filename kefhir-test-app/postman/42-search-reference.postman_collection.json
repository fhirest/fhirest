{
	"info": {
		"_postman_id": "f6e334a1-c018-4e20-9e34-851ad4e96da1",
		"name": "42-search-reference",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "test data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"resourceType\": \"Bundle\",\n  \"type\": \"transaction\",\n  \"entry\": [\n    {\n      \"request\": {\n        \"url\": \"Patient/ps100\",\n        \"method\": \"PUT\"\n      },\n      \"resource\": {\n        \"identifier\": [\n          {\n            \"system\": \"urn:kefhir-search-tests\",\n            \"value\": \"TESTPATIENT-100\"\n          }\n        ],\n        \"name\": [\n          {\n            \"family\": \"Margherita\"\n          }\n        ],\n        \"active\": true,\n        \"gender\": \"female\",\n        \"birthDate\": \"2000-02-02\",\n        \"resourceType\": \"Patient\"\n      }\n    },\n    {\n      \"request\": {\n        \"url\": \"Practitioner/pract100\",\n        \"method\": \"PUT\"\n      },\n      \"resource\": {\n        \"resourceType\": \"Practitioner\",\n        \"identifier\": [\n          {\n            \"system\": \"urn:kefhir-search-tests\",\n            \"value\": \"TEST-PRACTITIONER-100\"\n          }\n        ],\n        \"active\": true,\n        \"name\": [\n          {\n            \"family\": \"Aibolit\",\n            \"given\": [\n              \"Doktor\"\n            ]\n          }\n        ]\n      }\n    },\n    {\n      \"request\": {\n        \"url\": \"Organization/organization100\",\n        \"method\": \"PUT\"\n      },\n      \"resource\": {\n        \"resourceType\": \"Organization\",\n        \"identifier\": [\n          {\n            \"system\": \"urn:kefhir-search-tests\",\n            \"value\": \"TEST-ORGANIZATION-100\"\n          }\n        ],\n        \"name\": \"Doctor Spockâ€™s Quiet Baby Brick Oven Trattoria\"\n      }\n    },\n        {\n      \"request\": {\n        \"url\": \"Encounter/enc100\",\n        \"method\": \"PUT\"\n      },\n      \"resource\": {\n        \"resourceType\": \"Encounter\",\n        \"status\": \"in-progress\",\n        \"class\": {\n          \"system\": \"http://terminology.hl7.org/CodeSystem/v3-ActCode\",\n          \"code\": \"IMP\",\n          \"display\": \"inpatient encounter\"\n        },\n        \"subject\": {\n          \"reference\": \"Patient/ps100\"\n        },\n        \"serviceProvider\": {\n            \"reference\": \"Organization/organization100\"\n        }\n      }\n    },\n    {\n      \"request\": {\n        \"url\": \"Observation/observation100\",\n        \"method\": \"PUT\"\n      },\n      \"resource\": {\n        \"resourceType\": \"Observation\",\n        \"status\": \"final\",\n        \"category\": [\n          {\n            \"coding\": [\n              {\n                \"system\": \"http://terminology.hl7.org/CodeSystem/observation-category\",\n                \"code\": \"vital-signs\",\n                \"display\": \"Vital Signs\"\n              }\n            ],\n            \"text\": \"Vital Signs\"\n          }\n        ],\n        \"code\": {\n          \"coding\": [\n            {\n              \"system\": \"http://loinc.org\",\n              \"code\": \"8310-5\",\n              \"display\": \"Body temperature\"\n            }\n          ],\n          \"text\": \"Body temperature\"\n        },\n        \"subject\": {\n          \"reference\": \"Patient/ps100\"\n        },\n        \"encounter\": {\n          \"reference\": \"Encounter/enc100\"\n        },\n        \"performer\": [\n          {\"reference\": \"Practitioner/pract100\"},\n          {\"reference\": \"Organization/organization100\"}\n        ],\n        \"effectiveDateTime\": \"2022-02-21\",\n        \"valueQuantity\": {\n          \"value\": 37.7,\n          \"unit\": \"C\",\n          \"system\": \"http://unitsofmeasure.org\",\n          \"code\": \"Cel\"\n        }\n      }\n    }\n  ]\n}\n"
				},
				"url": {
					"raw": "{{kefhir}}",
					"host": [
						"{{kefhir}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param unexistant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(0);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?subject=doesnotexist",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "subject",
							"value": "doesnotexist"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(1);",
							"    pm.expect(pm.response.json().entry[0].resource.id).to.eql(\"observation100\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?subject=ps100",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "subject",
							"value": "ps100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(1);",
							"    pm.expect(pm.response.json().entry[0].resource.id).to.eql(\"observation100\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?subject=Patient/ps100",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "subject",
							"value": "Patient/ps100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(1);",
							"    pm.expect(pm.response.json().entry[0].resource.id).to.eql(\"observation100\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?subject:Patient=ps100",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "subject:Patient",
							"value": "ps100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param chain",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(0);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?subject.identifier=doesnotexist",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "subject.identifier",
							"value": "doesnotexist"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param chain",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(1);",
							"    pm.expect(pm.response.json().entry[0].resource.id).to.eql(\"observation100\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?subject.identifier=TESTPATIENT-100",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "subject.identifier",
							"value": "TESTPATIENT-100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param chain",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(1);",
							"    pm.expect(pm.response.json().entry[0].resource.id).to.eql(\"observation100\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?subject:Patient.identifier=TESTPATIENT-100",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "subject:Patient.identifier",
							"value": "TESTPATIENT-100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param chain",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(0);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?subject:Device.identifier=TESTPATIENT-100",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "subject:Device.identifier",
							"value": "TESTPATIENT-100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param [chain]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(0);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?performer.identifier=doesnotexist",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "performer.identifier",
							"value": "doesnotexist"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param [chain]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(1);",
							"    pm.expect(pm.response.json().entry[0].resource.id).to.eql(\"observation100\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?performer.identifier=TEST-ORGANIZATION-100",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "performer.identifier",
							"value": "TEST-ORGANIZATION-100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param [chain]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(1);",
							"    pm.expect(pm.response.json().entry[0].resource.id).to.eql(\"observation100\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?performer.identifier=TEST-PRACTITIONER-100",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "performer.identifier",
							"value": "TEST-PRACTITIONER-100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param chain.chain",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(0);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?encounter:Encounter.service-provider.identifier=doesnotexist",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "encounter:Encounter.service-provider.identifier",
							"value": "doesnotexist"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "reference param chain.chain Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"OK\", function () {",
							"  pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"validate search result\", function () {",
							"    pm.expect(pm.response.json().resourceType).to.eql(\"Bundle\");",
							"    pm.expect(pm.response.json().type).to.eql(\"searchset\");",
							"    pm.expect(pm.response.json().total).to.eql(1);",
							"    pm.expect(pm.response.json().entry[0].resource.id).to.eql(\"observation100\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{kefhir}}/Observation?encounter:Encounter.service-provider.identifier=TEST-ORGANIZATION-100",
					"host": [
						"{{kefhir}}"
					],
					"path": [
						"Observation"
					],
					"query": [
						{
							"key": "encounter:Encounter.service-provider.identifier",
							"value": "TEST-ORGANIZATION-100"
						}
					]
				}
			},
			"response": []
		}
	]
}